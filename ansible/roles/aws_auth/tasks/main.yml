- name: Configure kubectl for EKS
  shell: |
    aws eks update-kubeconfig --name depi-eks-cluster --region eu-central-1
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"
  args:
    creates: "~/.kube/config"

- name: Fetch existing aws-auth ConfigMap
  shell: kubectl get configmap aws-auth -n kube-system -o yaml
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"
  register: aws_auth_raw
  changed_when: false

- name: Backup current aws-auth ConfigMap
  copy:
    content: "{{ aws_auth_raw.stdout }}"
    dest: "/tmp/aws-auth-backup-{{ ansible_date_time.iso8601 }}.yaml"

- name: Write new aws-auth ConfigMap directly to file
  copy:
    dest: /tmp/aws-auth-updated.yaml
    content: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: aws-auth
        namespace: kube-system
      data:
        mapRoles: |
          - groups:
              - system:bootstrappers
              - system:nodes
            rolearn: arn:aws:iam::328986589640:role/depi-eks-cluster-eks-node-group-role
            username: system:node:{{ private_ip }}
          - rolearn: arn:aws:iam::328986589640:role/ecr_jenkins_permission
            username: jenkins
            groups:
              - system:masters
        mapUsers: |
          - userarn: arn:aws:iam::328986589640:user/gimmeursocks
            username: gimmeursocks
            groups:
              - system:masters
          - userarn: arn:aws:iam::328986589640:user/hafez
            username: hafez
            groups:
              - system:masters

- name: Apply the updated aws-auth ConfigMap
  shell: kubectl apply -f /tmp/aws-auth-updated.yaml
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin"
  register: apply_result

- name: Show apply result
  debug:
    var: apply_result.stdout_lines
